<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tessoft.karaoke.playlist">

	<insert id="insertPlayList" parameterType="java.util.HashMap"
		useGeneratedKeys="true" keyProperty="playListNo" keyColumn="playListNo">
		insert into play_list_master(Name, tempUserNo, categoryNo, shareYN, createdDate)
		values(#{Name}, #{tempUserNo}, #{categoryNo}, #{shareYN}, NOW())
		<selectKey keyProperty="playListNo" resultType="String" order="AFTER">
			select LAST_INSERT_ID();
		</selectKey>
	</insert>
	
	<select id="getAllPlayList" resultType="java.util.HashMap">
		select pm.*, pd.itemCount , ifnull(ph.playCount,0) as playCount
		from play_list_master pm
			left outer join (
				select playListNo, count(playListNo) as itemCount
				from play_list_detail
				group by playListNo
			) pd on pm.playListNo=pd.playListNo
			left outer join (
				select playListNo, ifnull(count(playListNo),0) as playCount
				from (
				select *
				from song_play_history
				where playListNo is not null
				group by playListNo, tempUserNo
				) A
				group by playListNo
			) ph on pm.playListNo=ph.playListNo
		where pm.shareYN='Y'
		and pd.itemCount &gt;= 10
		order by ph.playCount desc, pm.createdDate desc
		limit 0,100;
	</select>
	
	<select id="getPlayListByUser" resultType="java.util.HashMap">
		select pm.* , pd.itemCount, ifnull(ph.playCount,0) as playCount
		from play_list_master pm
		left outer join (
				select playListNo, count(playListNo) as itemCount
				from play_list_detail
				group by playListNo
			) pd on pm.playListNo=pd.playListNo
		left outer join (
			select playListNo, ifnull(count(playListNo),0) as playCount
			from (
			select *
			from song_play_history
			where playListNo is not null and tempUserNo=#{tempUserNo}
			group by playListNo, tempUserNo
			) A
			group by playListNo
		) ph on pm.playListNo=ph.playListNo
		where pm.tempUserNo=#{tempUserNo}
		order by pm.createdDate asc
	</select>
	
	<select id="getPlayListDetail" resultType="java.util.HashMap">
		select * from play_list_master
		where playListNo=#{playListNo}
	</select>
	
	<select id="getPlayListSongs" resultType="java.util.HashMap">
		select pd.*
		, s.videoID as videoID1, s2.videoID as videoID2
		, ifnull(s.playCount,0) as playCount1, ifnull(s2.playCount,0) as playCount2
		from play_list_detail pd
			left outer join (
				select ss.songNo, ss.videoID, count(sh.songNo) as playCount 
				from song_play_history sh
				left outer join song ss on ss.songNo = sh.songNo
				group by videoID
			) s on s.songNo= pd.songNo1
			left outer join (
				select ss.songNo, ss.videoID, count(sh.songNo) as playCount 
				from song_play_history sh
				left outer join song ss on ss.songNo = sh.songNo
				group by videoID
			) s2 on s2.songNo= pd.songNo2
		where playListNo=#{playListNo}
		order by pd.createdDate desc
	</select>
	
	<insert id="insertSearch" parameterType="java.util.HashMap">
		insert into search_history(keyword, result, expireDate, createdDate)
		values(#{keyword}, #{result}, DATE_ADD(NOW(), INTERVAL 1 DAY), NOW());
	</insert>
	
	<select id="getSearchHistoryByKeyword" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select * from search_history
		where keyword = #{keyword} and expireDate &gt; NOW()
		limit 0,1;
	</select>
	
	<delete id="deleteExpiredSearchHistoryByKeyword" parameterType="java.util.HashMap">
		delete from search_history
		where keyword = #{keyword} and expireDate &lt; NOW();
	</delete>
	
	<select id="searchPlayListSong" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select pd.*, s1.videoID as videoID1, s2.videoID as videoID2
		, s1.thumbnailURL as thumbnailURL1, s2.thumbnailURL as thumbnailURL2
		from play_list_detail pd
			left outer join play_list_master pm on pm.playListNo=pd.playListNo
			left outer join song s1 on s1.songNo=pd.songNo1
			left outer join song s2 on s2.songNo=pd.songNo2
		where replace(pd.title,' ','') like concat('%', replace(#{keyword},' ',''),'%')
		and pm.playListNo=#{playListNo}
	</select>
	
	<select id="searchMySong" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select pd.*, s1.videoID as videoID1, s2.videoID as videoID2
		, s1.thumbnailURL as thumbnailURL1, s2.thumbnailURL as thumbnailURL2
		from play_list_detail pd
			left outer join play_list_master pm on pm.playListNo=pd.playListNo
			left outer join song s1 on s1.songNo=pd.songNo1
			left outer join song s2 on s2.songNo=pd.songNo2
		where pm.tempUserNo=#{tempUserNo} and replace(pd.title,' ','') like concat('%',replace(#{keyword},' ',''),'%')
		and pm.playListNo=#{playListNo}
	</select>
	
	<select id="searchSong" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select *
		from play_list_detail
		where playListNo= #{playListNo} and title=#{title}
	</select>
	
	<update id="deletePlayListItem" parameterType="java.util.HashMap">
		delete from play_list_detail
		where playListNo=#{playListNo} and itemNo=#{itemNo}
	</update>
	
	<update id="updatePlaylistShare" parameterType="java.util.HashMap">
		update play_list_master
		set shareYN=#{shareYN}
		, Name=#{Name}
		where playListNo=#{playListNo} and tempUserNo=#{tempUserNo}
	</update>
	
	<update id="updatePlaylist" parameterType="java.util.HashMap">
		update play_list_master
		set shareYN=#{shareYN}
		, Name=#{Name}
		where playListNo=#{playListNo} and tempUserNo=#{tempUserNo}
	</update>
	
	<delete id="deletePlayList">
		delete from play_list_master
		where playListNo=#{playListNo} and tempUserNo=#{tempUserNo}
	</delete>
</mapper>